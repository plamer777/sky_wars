name: skywars copy and deploy
on: [push]
jobs:
  build_image:
    runs-on: ubuntu-latest
    steps:
      - name: clone repo
        uses: actions/checkout@v3
      - name: build image
        run: docker build -t plamer88/skywars:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker login
        run: echo ${{secrets.DOCKER_PASS_TOKEN}} | docker login -u ${{secrets.DOCKER_USERNAME}} --password-stdin
      - name: push image
        run: docker push plamer88/skywars:$GITHUB_REF_NAME-$GITHUB_RUN_ID

  deploy_application:
    runs-on: ubuntu-latest
    needs: build_image
    env:
      DB_HOST: postgres
      POSTGRES_DB: ${{secrets.POSTGRES_DB}}
      POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
      POSTGRES_USER: ${{secrets.POSTGRES_USER}}
      ADMIN_LOGIN: ${{secrets.ADMIN_LOGIN}}
      ADMIN_PASS: ${{secrets.ADMIN_PASS}}
      HASH_SALT: ${{secrets.HASH_SALT}}
      JWT_SECRET: ${{secrets.JWT_SECRET}}
    steps:
      - name: clone git repository
        uses: actions/checkout@v2
      - name: prepare files
        run: |
          mkdir temp          
          cp create_db.py temp/create_db.py
          cp add_admin.py temp/add_admin.py  
          cat docker-compose-ci.yaml | envsubst > temp/docker-compose.yaml
          cat data/admin.json | envsubst > temp/admin.json
          cat config.py | envsubst > temp/config.py          

      - name: copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{secrets.APP_HOST}}
          username: ${{secrets.SKYWARS_USERNAME}}
          password: ${{secrets.SKYWARS_SERVER_PASS}}
          source: "temp/docker-compose.yaml,temp/create_db.py,temp/admin.json,temp/add_admin.py,temp/config.py"
          target: "/home/skywars"
          strip_components: 1

      - name: run application
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.APP_HOST}}
          username: ${{secrets.SKYWARS_USERNAME}}
          password: ${{secrets.SKYWARS_SERVER_PASS}}
          script: |
            cd /home/skywars
            > logs.txt
            docker compose up -d --build
            docker system prune -a -f        
